{ "name": "Quartz",
  "scopeName": "source.quartz",
  "fileTypes": ["qrz"],
  "patterns": [
    // We start with numeric constants
    {
      "name": "constant.numeric.quartz",
      "match": "\\b((-)?\\d+(\\.\\d+)?)\\b",
      "comment": "Numbers, TODO: which types are supported?"
    },
    {
      "name": "keyword.other.quartz",
      "match": "\\b(package|import|macro)\\b",
      "comment": "Compiler directives"
    }, // todo das wort hintendran auch noch?
    {
      "name": "comment.line.number-sign.quartz",
      "match": "//.*$",
      "comment": "Single line comments"
    }, // todo: multiline comments
    {
      "name": "support.class.quartz",
      "match": "\\bmodule\\b",
      "comment": "Module declaration"
    }, // todo: module als blÃ¶cke
    {
      "name": "storage.modifier.quartz",
      "match": "\\b(mem|event|hybrid)\\b",
      "comment": "storage"
    },
    {
      "name": "support.other.quartz",
      "match": "\\b(drivenby|satisfies)\\b",
      "comment": "task"
    },
    {
      "name": "support.other.quartz",
      "match": "\\b(observer)\\b",
      "comment": "observer"
    },
    {
      "name": "storage.type.quartz",
      "match": "\\b(bool|nat|nat{\\d+}|int|int{\\d+}|real|bv|bv{\\d+})\\b",
      "comment": "Data types"
    },
    {
      "name": "constant.language.quartz",
      "match": "\\b(false|true|instant|inside|terminate|time)\\b",
      "comment": "Expressions -- constants"
    },
    {
      "name": "support.function.quartz",
      "match": "\\b(nat2bv|int2bv|arr2bv|tup2bv|bv2nat|bv2int|nat2real|int2real)\\b",
      "comment": "Expressions -- conversion"
    },
    {
      "name": "keyword.operator.quartz",
      "match": "\\b(!|not|&|and|\\||or|\\^|xor|->|imp|<->|eqv)\\b",
      "comment": "Expressions -- boolean operators"
    },
    {
      "name": "keyword.operator.quartz",
      "match": "\\b(\\+|-|\\*|/|%|abs|sat)\\b",
      "comment": "Expressions -- arithmetic operators"
    },
    {
      "name": "keyword.operator.quartz",
      "match": "\\b(drv|cont)\\b",
      "comment": "Expressions -- hybrid systems"
    },
    {
      "name": "keyword.operator.quartz",
      "match": "\\b(sin|cos|exp|log|sizeOf)\\b",
      "comment": "Expressions -- other operators"
    },
    {
      "name": "keyword.operator.quartz",
      "match": "\\b(exists|forall|sum)\\b",
      "comment": "Expressions -- generic expressions"
    },
    {
      "name": "keyword.operator.quartz",
      "match": "\\b(next)\\b",
      "comment": "Expressions -- misc. expressions"
    },
    {
      "name": "support.function.quartz",
      "match": "\\b(next|emit|emit next|assume|assert)\\b",
      "comment": "Discrete actions"
    },
    {
      "name": "support.function.quartz",
      "match": "\\b(nothing|pause|halt|await)\\b",
      "comment": "Wait statements"
    },
    {
      "name": "keyword.control.quartz",
      "match": "\\b(if|else|choose|case|do|default)\\b",
      "comment": "Conditional statements"
    },
    {
      "name": "keyword.control.quartz",
      "match": "\\b(next)\\b",
      "comment": "Sequential and parallel controll flow"
    },
    {
      "name": "keyword.control.quartz",
      "match": "\\b(loop|do|while|always|immediate always)\\b",
      "comment": "Loops"
    },
    {
      "name": "keyword.control.quartz",
      "match": "\\b(for|do|choose)\\b",
      "comment": "Generic statements"
    }
  ],
  "uuid": "cc41f9c8-3040-43cd-8ff4-73a567dcba2b"
}
